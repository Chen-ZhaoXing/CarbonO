{"ast":null,"code":"var _jsxFileName = \"/Users/noviaantony/Desktop/CS203-Team-2/carbonO_frontend/src/screens/ClaimReward2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FileUploaded from \"./FileUploader\";\nimport FileBase64 from \"react-file-base64\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClaimReward2 = () => {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const submitReceipt = () => {\n    // const apiKey = \"AIzaSyC3rJnOOPzFe0snLWmBrgukHmSqFxlimU8\";\n    console.log(\"in\");\n    console.log(selectedFile); // convert file to uri\n\n    const encodeImageURI = require(\"encode-image-uri\");\n\n    encodeImageURI(selectedFile).then(base64 => {\n      console.log(base64); // Do your stuff\n    }).catch(error => {\n      console.error(error); // Handle your error\n    }); // let imageBase64 = \"\";\n    // getBase64(selectedFile, (result) => {\n    //   imageBase64 = result;\n    // });\n    // const getBase64 = (file, cb) => {\n    //   let reader = new FileReader();\n    //   reader.readAsDataURL(file);\n    //   reader.onload = function () {\n    //       cb(reader.result)\n    //   };\n    //   reader.onerror = function (error) {\n    //       console.log('Error: ', error);\n    //   };\n    // }\n    // let body = {\n    //   requests: [\n    //     {\n    //       image: {\n    //         source: {\n    //           imageUri: \"https:p2d7x8x2.stackpathcdn.com/content/uploads/2016/05/Bill.jpg\"\n    //         },\n    //       },\n    //       features: [\n    //         {\n    //           type: \"TEXT_DETECTION\",\n    //           // maxResults: 1,\n    //         },\n    //       ],\n    //     },\n    //   ],\n    // };\n\n    let body = {\n      requests: [{\n        image: {\n          content: imageBase64\n        },\n        features: [{\n          type: \"TEXT_DETECTION\"\n        }]\n      }]\n    };\n    axios.post(\"https://vision.googleapis.com/v1/images:annotate?key=AIzaSyC3rJnOOPzFe0snLWmBrgukHmSqFxlimU8\", body).then(response => console.log(response)).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(FileUploaded, {\n        onFileSelectSuccess: file => setSelectedFile(file),\n        onFileSelectError: _ref => {\n          let {\n            error\n          } = _ref;\n          return alert(error);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitReceipt,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClaimReward2, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n\n_c = ClaimReward2;\nexport default ClaimReward2;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimReward2\");","map":{"version":3,"names":["React","useState","axios","FileUploaded","FileBase64","ClaimReward2","selectedFile","setSelectedFile","submitReceipt","console","log","encodeImageURI","require","then","base64","catch","error","body","requests","image","content","imageBase64","features","type","post","response","file","alert"],"sources":["/Users/noviaantony/Desktop/CS203-Team-2/carbonO_frontend/src/screens/ClaimReward2.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport FileUploaded from \"./FileUploader\";\nimport FileBase64 from \"react-file-base64\";\n\nconst ClaimReward2 = () => {\n\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const submitReceipt = () => {\n    // const apiKey = \"AIzaSyC3rJnOOPzFe0snLWmBrgukHmSqFxlimU8\";\n\n    console.log(\"in\");\n    console.log(selectedFile);\n\n    // convert file to uri\n    const encodeImageURI = require(\"encode-image-uri\");\n    \n\n    encodeImageURI(selectedFile)\n      .then((base64) => {\n        console.log(base64);\n\n        // Do your stuff\n      })\n      .catch((error) => {\n        console.error(error);\n        // Handle your error\n      });\n\n    // let imageBase64 = \"\";\n    // getBase64(selectedFile, (result) => {\n    //   imageBase64 = result;\n    // });\n\n    // const getBase64 = (file, cb) => {\n    //   let reader = new FileReader();\n    //   reader.readAsDataURL(file);\n    //   reader.onload = function () {\n    //       cb(reader.result)\n    //   };\n    //   reader.onerror = function (error) {\n    //       console.log('Error: ', error);\n    //   };\n    // }\n    \n\n\n\n    // let body = {\n    //   requests: [\n    //     {\n    //       image: {\n    //         source: {\n    //           imageUri: \"https:p2d7x8x2.stackpathcdn.com/content/uploads/2016/05/Bill.jpg\"\n    //         },\n    //       },\n    //       features: [\n    //         {\n    //           type: \"TEXT_DETECTION\",\n    //           // maxResults: 1,\n    //         },\n    //       ],\n    //     },\n    //   ],\n    // };\n\n    let body = {\n      requests: [\n        {\n          image: {\n            content: imageBase64,\n          },\n          features: [\n            {\n              type: \"TEXT_DETECTION\",\n            },\n          ],\n        },\n      ],\n    };\n\n    axios\n      .post(\n        \"https://vision.googleapis.com/v1/images:annotate?key=AIzaSyC3rJnOOPzFe0snLWmBrgukHmSqFxlimU8\",\n        body\n      )\n      .then((response) => console.log(response))\n      .catch((error) => console.log(error))\n\n\n  };\n\n\n  return (\n    <div>\n      <form>\n        <FileUploaded\n          onFileSelectSuccess={(file) => setSelectedFile(file)}\n          onFileSelectError={({ error }) => alert(error)}\n        />\n      </form>\n      <button onClick={submitReceipt}>Submit</button>\n    </div>\n  );\n}\n\n\nexport default ClaimReward2;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAEzB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;;EAEA,MAAMO,aAAa,GAAG,MAAM;IAC1B;IAEAC,OAAO,CAACC,GAAR,CAAY,IAAZ;IACAD,OAAO,CAACC,GAAR,CAAYJ,YAAZ,EAJ0B,CAM1B;;IACA,MAAMK,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;IAGAD,cAAc,CAACL,YAAD,CAAd,CACGO,IADH,CACSC,MAAD,IAAY;MAChBL,OAAO,CAACC,GAAR,CAAYI,MAAZ,EADgB,CAGhB;IACD,CALH,EAMGC,KANH,CAMUC,KAAD,IAAW;MAChBP,OAAO,CAACO,KAAR,CAAcA,KAAd,EADgB,CAEhB;IACD,CATH,EAV0B,CAqB1B;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAIC,IAAI,GAAG;MACTC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE;UACLC,OAAO,EAAEC;QADJ,CADT;QAIEC,QAAQ,EAAE,CACR;UACEC,IAAI,EAAE;QADR,CADQ;MAJZ,CADQ;IADD,CAAX;IAeArB,KAAK,CACFsB,IADH,CAEI,8FAFJ,EAGIP,IAHJ,EAKGJ,IALH,CAKSY,QAAD,IAAchB,OAAO,CAACC,GAAR,CAAYe,QAAZ,CALtB,EAMGV,KANH,CAMUC,KAAD,IAAWP,OAAO,CAACC,GAAR,CAAYM,KAAZ,CANpB;EASD,CAlFD;;EAqFA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,YAAD;QACE,mBAAmB,EAAGU,IAAD,IAAUnB,eAAe,CAACmB,IAAD,CADhD;QAEE,iBAAiB,EAAE;UAAA,IAAC;YAAEV;UAAF,CAAD;UAAA,OAAeW,KAAK,CAACX,KAAD,CAApB;QAAA;MAFrB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAOE;MAAQ,OAAO,EAAER,aAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CApGD;;GAAMH,Y;;KAAAA,Y;AAuGN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}