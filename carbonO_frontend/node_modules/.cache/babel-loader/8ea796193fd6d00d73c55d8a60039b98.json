{"ast":null,"code":"'use strict';\n\nconst Dispatcher = require('./dispatcher');\n\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('./core/errors');\n\nconst {\n  kDestroy,\n  kClose,\n  kDispatch\n} = require('./core/symbols');\n\nconst kDestroyed = Symbol('destroyed');\nconst kClosed = Symbol('closed');\nconst kOnDestroyed = Symbol('onDestroyed');\nconst kOnClosed = Symbol('onClosed');\n\nclass DispatcherBase extends Dispatcher {\n  constructor() {\n    super();\n    this[kDestroyed] = false;\n    this[kOnDestroyed] = [];\n    this[kClosed] = false;\n    this[kOnClosed] = [];\n  }\n\n  get destroyed() {\n    return this[kDestroyed];\n  }\n\n  get closed() {\n    return this[kClosed];\n  }\n\n  close(callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data);\n        });\n      });\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback');\n    }\n\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null));\n      return;\n    }\n\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback);\n      } else {\n        queueMicrotask(() => callback(null, null));\n      }\n\n      return;\n    }\n\n    this[kClosed] = true;\n    this[kOnClosed].push(callback);\n\n    const onClosed = () => {\n      const callbacks = this[kOnClosed];\n      this[kOnClosed] = null;\n\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null);\n      }\n    }; // Should not error.\n\n\n    this[kClose]().then(() => this.destroy()).then(() => {\n      queueMicrotask(onClosed);\n    });\n  }\n\n  destroy(err, callback) {\n    if (typeof err === 'function') {\n      callback = err;\n      err = null;\n    }\n\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ?\n          /* istanbul ignore next: should never error */\n          reject(err) : resolve(data);\n        });\n      });\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback');\n    }\n\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback);\n      } else {\n        queueMicrotask(() => callback(null, null));\n      }\n\n      return;\n    }\n\n    if (!err) {\n      err = new ClientDestroyedError();\n    }\n\n    this[kDestroyed] = true;\n    this[kOnDestroyed].push(callback);\n\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed];\n      this[kOnDestroyed] = null;\n\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null);\n      }\n    }; // Should not error.\n\n\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed);\n    });\n  }\n\n  dispatch(opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object');\n    }\n\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.');\n      }\n\n      if (this[kDestroyed]) {\n        throw new ClientDestroyedError();\n      }\n\n      if (this[kClosed]) {\n        throw new ClientClosedError();\n      }\n\n      return this[kDispatch](opts, handler);\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method');\n      }\n\n      handler.onError(err);\n      return false;\n    }\n  }\n\n}\n\nmodule.exports = DispatcherBase;","map":{"version":3,"names":["Dispatcher","require","ClientDestroyedError","ClientClosedError","InvalidArgumentError","kDestroy","kClose","kDispatch","kDestroyed","Symbol","kClosed","kOnDestroyed","kOnClosed","DispatcherBase","constructor","destroyed","closed","close","callback","undefined","Promise","resolve","reject","err","data","queueMicrotask","push","onClosed","callbacks","i","length","then","destroy","onDestroyed","dispatch","opts","handler","onError","module","exports"],"sources":["/Users/noviaantony/Desktop/CS203-Team-2/carbonO_frontend/node_modules/undici/lib/dispatcher-base.js"],"sourcesContent":["'use strict'\n\nconst Dispatcher = require('./dispatcher')\nconst {\n  ClientDestroyedError,\n  ClientClosedError,\n  InvalidArgumentError\n} = require('./core/errors')\nconst { kDestroy, kClose, kDispatch } = require('./core/symbols')\n\nconst kDestroyed = Symbol('destroyed')\nconst kClosed = Symbol('closed')\nconst kOnDestroyed = Symbol('onDestroyed')\nconst kOnClosed = Symbol('onClosed')\n\nclass DispatcherBase extends Dispatcher {\n  constructor () {\n    super()\n\n    this[kDestroyed] = false\n    this[kOnDestroyed] = []\n    this[kClosed] = false\n    this[kOnClosed] = []\n  }\n\n  get destroyed () {\n    return this[kDestroyed]\n  }\n\n  get closed () {\n    return this[kClosed]\n  }\n\n  close (callback) {\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.close((err, data) => {\n          return err ? reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      queueMicrotask(() => callback(new ClientDestroyedError(), null))\n      return\n    }\n\n    if (this[kClosed]) {\n      if (this[kOnClosed]) {\n        this[kOnClosed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    this[kClosed] = true\n    this[kOnClosed].push(callback)\n\n    const onClosed = () => {\n      const callbacks = this[kOnClosed]\n      this[kOnClosed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kClose]()\n      .then(() => this.destroy())\n      .then(() => {\n        queueMicrotask(onClosed)\n      })\n  }\n\n  destroy (err, callback) {\n    if (typeof err === 'function') {\n      callback = err\n      err = null\n    }\n\n    if (callback === undefined) {\n      return new Promise((resolve, reject) => {\n        this.destroy(err, (err, data) => {\n          return err ? /* istanbul ignore next: should never error */ reject(err) : resolve(data)\n        })\n      })\n    }\n\n    if (typeof callback !== 'function') {\n      throw new InvalidArgumentError('invalid callback')\n    }\n\n    if (this[kDestroyed]) {\n      if (this[kOnDestroyed]) {\n        this[kOnDestroyed].push(callback)\n      } else {\n        queueMicrotask(() => callback(null, null))\n      }\n      return\n    }\n\n    if (!err) {\n      err = new ClientDestroyedError()\n    }\n\n    this[kDestroyed] = true\n    this[kOnDestroyed].push(callback)\n\n    const onDestroyed = () => {\n      const callbacks = this[kOnDestroyed]\n      this[kOnDestroyed] = null\n      for (let i = 0; i < callbacks.length; i++) {\n        callbacks[i](null, null)\n      }\n    }\n\n    // Should not error.\n    this[kDestroy](err).then(() => {\n      queueMicrotask(onDestroyed)\n    })\n  }\n\n  dispatch (opts, handler) {\n    if (!handler || typeof handler !== 'object') {\n      throw new InvalidArgumentError('handler must be an object')\n    }\n\n    try {\n      if (!opts || typeof opts !== 'object') {\n        throw new InvalidArgumentError('opts must be an object.')\n      }\n\n      if (this[kDestroyed]) {\n        throw new ClientDestroyedError()\n      }\n\n      if (this[kClosed]) {\n        throw new ClientClosedError()\n      }\n\n      return this[kDispatch](opts, handler)\n    } catch (err) {\n      if (typeof handler.onError !== 'function') {\n        throw new InvalidArgumentError('invalid onError method')\n      }\n\n      handler.onError(err)\n\n      return false\n    }\n  }\n}\n\nmodule.exports = DispatcherBase\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}