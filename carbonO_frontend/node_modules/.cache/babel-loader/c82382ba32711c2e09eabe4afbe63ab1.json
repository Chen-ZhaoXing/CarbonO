{"ast":null,"code":"var _jsxFileName = \"/Users/noviaantony/Desktop/carbono/myFile/src/components/carbontracker/Stepper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport StepperControl from './StepperControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stepper = _ref => {\n  _s();\n\n  let {\n    steps,\n    currentStep\n  } = _ref;\n  const [newStep, setNewStep] = useState([]);\n  const stepRef = useRef();\n\n  const updateStep = (stepNumber, steps) => {\n    const newSteps = [...steps];\n    let count = 0;\n\n    while (count < newSteps.length) {\n      if (count === stepNumber) {\n        newSteps[count] = { ...newSteps[count],\n          highlighted: true,\n          selected: true,\n          completed: true\n        };\n        count++;\n      } else if (count < stepNumber) {\n        newSteps[count] = { ...newSteps[count],\n          highlighted: false,\n          selected: true,\n          completed: true\n        };\n        count++;\n      }\n    }\n  }; // useEffect to check for change in step\n\n\n  useEffect(() => {\n    // create object\n    const stepsState = steps.map((step, index) => Object.assign({}, {\n      description: step,\n      completed: false,\n      highlighted: index === 0 ? true : false,\n      selected: index === 0 ? true : false\n    }));\n    stepRef.current = stepsState;\n    const current = updateStep(currentStep - 1, stepRef.current);\n    setNewStep(current);\n  }, []);\n  const displaySteps = newStep.map((step, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: index === newStep.length - 1 ? \"w-full flex items-center\" : \"flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex flex-col items-center text-teal-600\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-full transition duration-500 ease-in-out border-2 border-grey-300 h-12 w-12 flex ietms-center justify-center py-3\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 text-center mt-16 w-32 text-xs font-medium uppercase\",\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-auto border-t-2 transition duration-500 ease-in-out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  });\n  return (\n    /*#__PURE__*/\n    // centers the items\n    _jsxDEV(\"div\", {\n      className: \"mx-4 p-4 flex justify-between items-center\",\n      children: displaySteps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Stepper, \"cr/wrMMFrnEzGbcVPgFk4GjazYM=\");\n\n_c = Stepper;\nexport default Stepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stepper\");","map":{"version":3,"names":["React","useEffect","useState","useRef","StepperControl","Stepper","steps","currentStep","newStep","setNewStep","stepRef","updateStep","stepNumber","newSteps","count","length","highlighted","selected","completed","stepsState","map","step","index","Object","assign","description","current","displaySteps"],"sources":["/Users/noviaantony/Desktop/carbono/myFile/src/components/carbontracker/Stepper.jsx"],"sourcesContent":["import React, {useEffect, useState, useRef} from 'react'\nimport StepperControl from './StepperControl'\n\nconst Stepper = ({steps, currentStep}) => {\n\n  const [newStep, setNewStep] = useState([]);\n  const stepRef = useRef();\n  const updateStep = (stepNumber, steps) => {\n    const newSteps = [...steps]\n    let count = 0;\n    while (count < newSteps.length) {\n      if (count === stepNumber) {\n        newSteps[count] = {\n          ...newSteps[count],\n          highlighted: true,\n          selected: true,\n          completed:true,\n        };\n        count++\n      } else if (count < stepNumber) {\n        newSteps[count] = {\n          ...newSteps[count],\n          highlighted: false,\n          selected: true,\n          completed: true,\n        };\n        count++;\n\n      }\n\n    }\n\n\n  }\n\n  // useEffect to check for change in step\n  useEffect(() => {\n    // create object\n    const stepsState = steps.map((step, index) =>\n      Object.assign(\n        {},\n        {\n          description: step,\n          completed: false,\n          highlighted: index === 0 ? true : false,\n          selected: index === 0 ? true : false,\n        }\n      )\n    );\n\n    stepRef.current = stepsState;\n    const current = updateStep(currentStep -1, stepRef.current);\n    setNewStep(current);\n\n  }, []);\n\n  const displaySteps = newStep.map((step,index) => {\n    return (\n      <div key = {index} className =  {index === newStep.length - 1 ? \"w-full flex items-center\" : \"flex items-center\"} >\n      <div className=\"relative flex flex-col items-center text-teal-600\">\n        <div className=\"rounded-full transition duration-500 ease-in-out border-2 border-grey-300 h-12 w-12 flex ietms-center justify-center py-3\">\n          1\n        </div>\n        <div className=\"absolute top-0 text-center mt-16 w-32 text-xs font-medium uppercase\">\n          description\n        </div>\n      </div>\n\n      <div className=\"flex-auto border-t-2 transition duration-500 ease-in-out\">\n        {/* Display line */}\n      </div>\n    </div>\n\n    );\n  });\n    \n  \n\n  return (\n    // centers the items\n    <div className=\"mx-4 p-4 flex justify-between items-center\">\n      {displaySteps}\n    </div>\n  );\n\n};\n\nexport default Stepper;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,OAAO,GAAG,QAA0B;EAAA;;EAAA,IAAzB;IAACC,KAAD;IAAQC;EAAR,CAAyB;EAExC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMQ,OAAO,GAAGP,MAAM,EAAtB;;EACA,MAAMQ,UAAU,GAAG,CAACC,UAAD,EAAaN,KAAb,KAAuB;IACxC,MAAMO,QAAQ,GAAG,CAAC,GAAGP,KAAJ,CAAjB;IACA,IAAIQ,KAAK,GAAG,CAAZ;;IACA,OAAOA,KAAK,GAAGD,QAAQ,CAACE,MAAxB,EAAgC;MAC9B,IAAID,KAAK,KAAKF,UAAd,EAA0B;QACxBC,QAAQ,CAACC,KAAD,CAAR,GAAkB,EAChB,GAAGD,QAAQ,CAACC,KAAD,CADK;UAEhBE,WAAW,EAAE,IAFG;UAGhBC,QAAQ,EAAE,IAHM;UAIhBC,SAAS,EAAC;QAJM,CAAlB;QAMAJ,KAAK;MACN,CARD,MAQO,IAAIA,KAAK,GAAGF,UAAZ,EAAwB;QAC7BC,QAAQ,CAACC,KAAD,CAAR,GAAkB,EAChB,GAAGD,QAAQ,CAACC,KAAD,CADK;UAEhBE,WAAW,EAAE,KAFG;UAGhBC,QAAQ,EAAE,IAHM;UAIhBC,SAAS,EAAE;QAJK,CAAlB;QAMAJ,KAAK;MAEN;IAEF;EAGF,CA1BD,CAJwC,CAgCxC;;;EACAb,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,UAAU,GAAGb,KAAK,CAACc,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAC3BC,MAAM,CAACC,MAAP,CACE,EADF,EAEE;MACEC,WAAW,EAAEJ,IADf;MAEEH,SAAS,EAAE,KAFb;MAGEF,WAAW,EAAEM,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqB,KAHpC;MAIEL,QAAQ,EAAEK,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqB;IAJjC,CAFF,CADiB,CAAnB;IAYAZ,OAAO,CAACgB,OAAR,GAAkBP,UAAlB;IACA,MAAMO,OAAO,GAAGf,UAAU,CAACJ,WAAW,GAAE,CAAd,EAAiBG,OAAO,CAACgB,OAAzB,CAA1B;IACAjB,UAAU,CAACiB,OAAD,CAAV;EAED,CAlBQ,EAkBN,EAlBM,CAAT;EAoBA,MAAMC,YAAY,GAAGnB,OAAO,CAACY,GAAR,CAAY,CAACC,IAAD,EAAMC,KAAN,KAAgB;IAC/C,oBACE;MAAmB,SAAS,EAAKA,KAAK,KAAKd,OAAO,CAACO,MAAR,GAAiB,CAA3B,GAA+B,0BAA/B,GAA4D,mBAA7F;MAAA,wBACA;QAAK,SAAS,EAAC,mDAAf;QAAA,wBACE;UAAK,SAAS,EAAC,2HAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAK,SAAS,EAAC,qEAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAUA;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QAVA;IAAA,GAAYO,KAAZ;MAAA;MAAA;MAAA;IAAA,QADF;EAiBD,CAlBoB,CAArB;EAsBA;IAAA;IACE;IACA;MAAK,SAAS,EAAC,4CAAf;MAAA,UACGK;IADH;MAAA;MAAA;MAAA;IAAA;EAFF;AAOD,CAlFD;;GAAMtB,O;;KAAAA,O;AAoFN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}